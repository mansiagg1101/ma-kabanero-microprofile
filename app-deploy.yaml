apiVersion: appsody.dev/v1beta1
kind: AppsodyApplication
metadata:
  annotations:
    architecture: x86_64
    authoritative-source-url: registry.access.redhat.com
    build-date: 2019-10-29T16:44:53.794580
    commit.image.appsody.dev/author: mansiagg1101 <mansi.agarwal@Mansis-MacBook-Pro.local>
    commit.image.appsody.dev/committer: mansiagg1101 <mansi.agarwal@Mansis-MacBook-Pro.local>
    commit.image.appsody.dev/date: Fri Mar 27 19:08:29 2020 -0500
    commit.image.appsody.dev/message: test2
    commit.stack.appsody.dev/author: Steve Groeger <groeges@uk.ibm.com>
    commit.stack.appsody.dev/committer: GitHub <noreply@github.com>
    commit.stack.appsody.dev/contextDir: /incubator/java-microprofile
    commit.stack.appsody.dev/date: Tue Mar 10 21:35:36 2020 +0000
    commit.stack.appsody.dev/message: 'Merge pull request #313 from groeges/release-0.6'
    description: This image is the Kabanero development container for the java-microprofile
      stack
    distribution-scope: public
    image.opencontainers.org/created: "2020-03-28T21:53:07-05:00"
    image.opencontainers.org/documentation: https://github.com/mansiagg1101/ma-kabanero-microprofile
    image.opencontainers.org/revision: 48445513268e1536ad746a12276129644c0aba2f-modified
    image.opencontainers.org/source: https://github.com/mansiagg1101/ma-kabanero-microprofile/tree/master
    image.opencontainers.org/url: https://github.com/mansiagg1101/ma-kabanero-microprofile
    k8s.io/description: The Universal Base Image is designed and engineered to be
      the base layer for all of your containerized applications, middleware and utilities.
      This base image is freely redistributable, but Red Hat only supports Red Hat
      technologies through subscriptions for Red Hat products. This image is maintained
      by Red Hat and updated regularly.
    k8s.io/display-name: Red Hat Universal Base Image 8
    maintainer: Red Hat, Inc.
    name: kabanero/java-microprofile
    openshift.io/expose-services: ""
    openshift.io/tags: base rhel8
    redhat.com/build-host: cpt-1002.osbs.prod.upshift.rdu2.redhat.com
    redhat.com/component: ubi8-container
    redhat.com/license_terms: https://www.redhat.com/en/about/red-hat-end-user-license-agreements#UBI
    release: "277"
    stack.appsody.dev/authors: Emily Jiang <emijiang6@googlemail.com>, Neeraj Laad
      <neeraj.laad@gmail.com>, Ozzy <ozzy@ca.ibm.com>
    stack.appsody.dev/configured: docker.io/kabanero/java-microprofile:0.2
    stack.appsody.dev/created: "2020-03-10T21:40:06Z"
    stack.appsody.dev/description: Eclipse MicroProfile on Open Liberty & OpenJ9 using
      Maven
    stack.appsody.dev/documentation: https://github.com/kabanero-io/collections/tree/master/incubator/java-microprofile/README.md
    stack.appsody.dev/licenses: Apache-2.0
    stack.appsody.dev/revision: 5f7634c970b880bef90eeea4288153249e172d61
    stack.appsody.dev/source: https://github.com/kabanero-io/collections/tree/master/incubator/java-microprofile/image
    stack.appsody.dev/tag: docker.io/kabanero/java-microprofile:0.2.26
    stack.appsody.dev/title: Eclipse MicroProfileÂ®
    stack.appsody.dev/url: https://github.com/kabanero-io/collections/tree/master/incubator/java-microprofile
    summary: Image for Kabanero java-microprofile development
    url: https://access.redhat.com/containers/#/registry.access.redhat.com/ubi8/images/8.1-277
    vcs-ref: c42933bcdbf9f1c232e981a5e40de257c3534c8e
    vcs-type: git
    vendor: Kabanero
    version: 0.2.26
  creationTimestamp: null
  labels:
    image.opencontainers.org/title: appsody-sample-microprofile
    stack.appsody.dev/id: java-microprofile
    stack.appsody.dev/version: 0.2.26
  name: appsody-sample-microprofile
  namespace: ma-kabanero-microprofile
spec:
  applicationImage: dev.local/appsody-sample-microprofile
  createKnativeService: false
  expose: true
  livenessProbe:
    failureThreshold: 12
    httpGet:
      path: /health/live
      port: 9080
    initialDelaySeconds: 5
    periodSeconds: 2
  readinessProbe:
    failureThreshold: 12
    httpGet:
      path: /health/ready
      port: 9080
    initialDelaySeconds: 5
    periodSeconds: 2
    timeoutSeconds: 1
  service:
    annotations:
      prometheus.io/scrape: "true"
    port: 9080
    type: NodePort
  stack: java-microprofile
  version: 1.0.0
